.TH HOMA_RECV 3 2019-02-15 "Homa" "Linux Programmer's Manual"
.SH NAME
homa_recv \- receive a Homa message
.SH SYNOPSIS
.nf
.B #include <homa.h>
.PP
.BI "ssize_t homa_recv(int " sockfd ", const void *" buf ", size_t " len ", int " flags ", const struct sockaddr *" src_addr ",
.BI "                  size_t * " addrlen ", uint64_t *" id ", size_t *" msglen );
.fi
.SH DESCRIPTION
The function
.BR homa_recv ()
waits for an incoming Homa message and returns it.
The argument
.I sockfd
is the file descriptor of the receiving socket; this must be a Homa socket.
The incoming message will be stored in the buffer pointed to by
.IR buf .
The argument
.I len
indicates the number of bytes available for the message.
.PP
The
.IR flags
argument is an ORed combination of the following values:
.TP
.B HOMA_RECV_REQUEST
Any incoming request message may be returned.
.TP
.B HOMA_RECV_RESPONSE
Any incoming response message may be returned.
.TP
.B HOMA_RECV_NONBLOCKING
If no appropriate message is available, the call will return immediately
with an
.B EAGAIN
error, rather than blocking.
.TP
.B HOMA_RECV_PARTIAL
Do not delete the incoming message if
.I buf
was not large enough to hold all the (remaining) bytes of the message.
.PP
The desired message(s) can be specified in any or all of three different
ways. First, if
.I flags
contains
.B HOMA_RECV_REQUEST
then any new request message may be returned.
Second, if
.I flags
contains
.B HOMA_RECV_RESPONSE
then any new response message may be returned.
Third, if
.I *id
is nonzero then a message matching
.I *id
and
.I *src_addr
may be returned:
if
.I src_addr->sin_addr
is zero, then the message must be a response with the
given identifier; otherwise the message must be a previously-received
request from the given source with the given identifier (this is used
to continue reading a partially read request as described below).
.PP
The identifier for the received message is returned at
.IR *id
and the source address for the message is placed in the buffer
pointed to by
.IR src_addr .
The argument
.I addrlen
is a value-result argument.
Before the call, it should be initialized to the size of the
buffer associated with
.IR src_addr .
Upon return,
.I *addrlen
is updated to contain the actual size of the source address.
If
.I
msglen
is non-NULL then the total length of the incoming message is
written to
.IR *msglen .
.PP
For some settings of
.I flags
and
.IR *id ,
the message returned may be either a request or a response.
The port number stored in
.I src_addr
can be used to distinguish requests from responses.
A port number of
.B HOMA_MIN_CLIENT_PORT
or greater indicates that the message is a request;
a port number less than
.B HOMA_MIN_CLIENT_PORT
indicates that the message is a response.
.PP
If the message is a request, then the caller must eventually invoke
.BR homa_reply (3)
to respond (Homa retains state for the request until
.BR homa_reply (3)
is invoked).
.PP
If the message is larger than
.IR len ,
then only the first
.I len
bytes will be returned; in this case,
.BR homa_recv
may be invoked again to read additional bytes. Each call returns the next
unread bytes. Subsequent invocations of
.B homa_recv
must identify the message explicitly with
.IR id
and
.I src_addr (the
.B HOMA_RECV_REQUEST
and
.B HOMA_RECV_RESPONSE
flags will not return messages that have already been partially read).
When a response message is returned, the message is normally deleted,
even if
.I buf
was too small to hold the entire message. However, if
.B HOMA_RECV_PARTIAL
is specified in
.IR flags ,
then the message will be retained if there isn't room in
.IR buf
for the entire message. The caller should invoke
.B homa_recv
repeatedly to read the remaining bytes. Once the entire message has
been read, or
.B homa_recv
is invoked without specifying
.BR HOMA_RECV_PARTIAL ,
the message will be deleted. There is no need to specify
.B HOMA_RECV_PARTIAL
when receiving request messages, since requests are automatically
retained until the corresponding responses have been sent.

.SH RETURN VALUE
On success, the return value is the number of bytes stored at
.IR buf .
On error, \-1 is returned and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EAGAIN
No appropriate message was available and
.B HOMA_RECV_NONBLOCKING
was specified in
.IR flags .
.TP
.B EBADF
.I sockfd
is not a valid open file descriptor.
.TP
.B EFAULT
An invalid user space address was specified for an argument.
.TP
.B EHOSTUNREACH
No route could be found to the destination host.
.TP
.B EINTR
A signal occurred before a message was received; see
.BR signal (7).
.TP
.B EINVAL
The file descriptor
.I sockfd
did not refer to a Homa socket, or the argument
.I flags
did not contain either
.BR HOMA_RECV_REQUEST " or " HOMA_RECV_RESPONSE ,
or there was no outstanding request with an id matching
.IR *id ,
or there was not enough space at
.I *src_addr
to store the source address.
.TP
.B ENOTCONN
No socket is bound to the destination port for the request.
.TP
.B EPROTONOSUPPORT
The destination machine does not support the Homa protocol.
.TP
.B ENOMEM
No memory available.
.TP
.B ESHUTDOWN
The socket has been disabled using
.BR shutdown (2).
.TP
.B ETIMEDOUT
The destination server did not respond to protocol requests.
.SH SEE ALSO
.BR homa_invoke (3),
.BR homa_reply (3),
.BR homa_send (3),
.BR homa (7)
